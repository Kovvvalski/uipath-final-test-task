<Activity mc:Ignorable="sap sap2010" x:Class="ProcessInvoice" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:p1="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p2="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p3="http://schemas.uipath.com/workflow/activities/ocr" xmlns:p4="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p5="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p6="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p7="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p8="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd2="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_taxonomy" Type="InArgument(p:DocumentTaxonomy)" />
    <x:Property Name="in_docPath" Type="InArgument(si:FileInfo)" />
    <x:Property Name="in_duApiKey" Type="InArgument(x:String)" />
    <x:Property Name="in_documentId" Type="InArgument(x:String)" />
    <x:Property Name="out_extractedData" Type="OutArgument(sd:DataSet)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>807.2,2040</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Vision.OmniPage.Core</x:String>
      <x:String>UiPath.OmniPage.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.OmniPage.Core</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ProcessInvoice" sap:VirtualizedContainerService.HintSize="540,1975.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="docText" />
      <Variable x:TypeArguments="p2:Document" Name="dom" />
      <Variable x:TypeArguments="p5:ClassificationResult[]" Name="classificationResults" />
      <Variable x:TypeArguments="p5:ExtractionResult" Name="extractionResults" />
      <Variable x:TypeArguments="x:String" Name="ocrEndPoint" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="477.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">"Starting processing document with id " + in_documentId</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <p1:DigitizeDocument ApplyOcrMigrated="True" ApplyOcrOnPdf="Auto" DegreeOfParallelism="-1" DetectCheckboxes="True" DisplayName="Digitize Document" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="477.6,332" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
      <p1:DigitizeDocument.DocumentObjectModel>
        <OutArgument x:TypeArguments="p2:Document">
          <CSharpReference x:TypeArguments="p2:Document" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">dom</CSharpReference>
        </OutArgument>
      </p1:DigitizeDocument.DocumentObjectModel>
      <p1:DigitizeDocument.DocumentPath>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">in_docPath.FullName</CSharpValue>
        </InArgument>
      </p1:DigitizeDocument.DocumentPath>
      <p1:DigitizeDocument.DocumentText>
        <OutArgument x:TypeArguments="x:String">
          <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">docText</CSharpReference>
        </OutArgument>
      </p1:DigitizeDocument.DocumentText>
      <p1:DigitizeDocument.OCREngine>
        <ActivityFunc x:TypeArguments="sd1:Image, x:String, scg:IEnumerable(scg:KeyValuePair(sd2:Rectangle, x:String))">
          <ActivityFunc.Argument1>
            <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
          </ActivityFunc.Argument1>
          <ActivityFunc.Argument2>
            <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
          </ActivityFunc.Argument2>
          <p3:UiPathDocumentOCR ApiKey="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="UiPath Document OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,24.8" sap2010:WorkflowViewState.IdRef="UiPathDocumentOCR_2" Language="auto" NoopExecution="False" Profile="None" Scale="1" Timeout="100000" UseLocalServer="True">
            <p3:UiPathDocumentOCR.Endpoint>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">ocrEndPoint</CSharpValue>
              </InArgument>
            </p3:UiPathDocumentOCR.Endpoint>
            <p3:UiPathDocumentOCR.Image>
              <InArgument x:TypeArguments="sd1:Image">
                <CSharpValue x:TypeArguments="sd1:Image" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">Image</CSharpValue>
              </InArgument>
            </p3:UiPathDocumentOCR.Image>
            <p3:UiPathDocumentOCR.PredictionId>
              <InArgument x:TypeArguments="x:String">
                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">PredictionId</CSharpValue>
              </InArgument>
            </p3:UiPathDocumentOCR.PredictionId>
          </p3:UiPathDocumentOCR>
        </ActivityFunc>
      </p1:DigitizeDocument.OCREngine>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </p1:DigitizeDocument>
    <p4:ClassifyDocumentScope DisplayName="Classify Document Scope" sap:VirtualizedContainerService.HintSize="477.6,571.2" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_1" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UId82313a700c34794bd21f897a7804484&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;amet.invoices.ametInvoice&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;amet.invoices.ametInvoice&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;aenean.invoices.aeneanInvoice&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;aenean.invoices.aeneanInvoice&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UId82313a700c34794bd21f897a7804484&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UId82313a700c34794bd21f897a7804484&quot;:[]}}">
      <p4:ClassifyDocumentScope.ClassificationResults>
        <OutArgument x:TypeArguments="p5:ClassificationResult[]">
          <CSharpReference x:TypeArguments="p5:ClassificationResult[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">classificationResults</CSharpReference>
        </OutArgument>
      </p4:ClassifyDocumentScope.ClassificationResults>
      <p4:ClassifyDocumentScope.Classifiers>
        <p4:IntelligentKeywordClassifier LearningData="{x:Null}" TimeoutMs="{x:Null}" DisplayName="Intelligent Keyword Classifier" Endpoint="https://du.uipath.com/svc/intelligentkeywords" sap:VirtualizedContainerService.HintSize="223.2,212.8" sap2010:WorkflowViewState.IdRef="IntelligentKeywordClassifier_1" LearningFilePath="DocumentProcessing\\cliassifierLearningData.json" PersistenceId="UId82313a700c34794bd21f897a7804484">
          <p4:IntelligentKeywordClassifier.ApiKey>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">in_duApiKey</CSharpValue>
            </InArgument>
          </p4:IntelligentKeywordClassifier.ApiKey>
          <p4:IntelligentKeywordClassifier.ClassifierResult>
            <OutArgument x:TypeArguments="p6:ClassifierResult">
              <DelegateArgumentReference x:TypeArguments="p6:ClassifierResult">
                <DelegateOutArgument x:TypeArguments="p6:ClassifierResult" Name="ClassifierResult" />
              </DelegateArgumentReference>
            </OutArgument>
          </p4:IntelligentKeywordClassifier.ClassifierResult>
          <p4:IntelligentKeywordClassifier.DocumentObjectModel>
            <InArgument x:TypeArguments="p2:Document">
              <DelegateArgumentValue x:TypeArguments="p2:Document">
                <DelegateInArgument x:TypeArguments="p2:Document" Name="DocumentObjectModel" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:IntelligentKeywordClassifier.DocumentObjectModel>
          <p4:IntelligentKeywordClassifier.DocumentPath>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:IntelligentKeywordClassifier.DocumentPath>
          <p4:IntelligentKeywordClassifier.DocumentText>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:IntelligentKeywordClassifier.DocumentText>
          <p4:IntelligentKeywordClassifier.DocumentTypes>
            <InArgument x:TypeArguments="p6:ClassifierDocumentType[]">
              <DelegateArgumentValue x:TypeArguments="p6:ClassifierDocumentType[]">
                <DelegateInArgument x:TypeArguments="p6:ClassifierDocumentType[]" Name="DocumentTypes" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:IntelligentKeywordClassifier.DocumentTypes>
          <p4:IntelligentKeywordClassifier.PredictionId>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
              </DelegateArgumentValue>
            </InArgument>
          </p4:IntelligentKeywordClassifier.PredictionId>
        </p4:IntelligentKeywordClassifier>
      </p4:ClassifyDocumentScope.Classifiers>
      <p4:ClassifyDocumentScope.DocumentObjectModel>
        <InArgument x:TypeArguments="p2:Document">
          <CSharpValue x:TypeArguments="p2:Document" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">dom</CSharpValue>
        </InArgument>
      </p4:ClassifyDocumentScope.DocumentObjectModel>
      <p4:ClassifyDocumentScope.DocumentPath>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">in_docPath.FullName</CSharpValue>
        </InArgument>
      </p4:ClassifyDocumentScope.DocumentPath>
      <p4:ClassifyDocumentScope.DocumentText>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">docText</CSharpValue>
        </InArgument>
      </p4:ClassifyDocumentScope.DocumentText>
      <p4:ClassifyDocumentScope.Taxonomy>
        <InArgument x:TypeArguments="p:DocumentTaxonomy">
          <CSharpValue x:TypeArguments="p:DocumentTaxonomy" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">in_taxonomy</CSharpValue>
        </InArgument>
      </p4:ClassifyDocumentScope.Taxonomy>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </p4:ClassifyDocumentScope>
    <p7:DataExtractionScope DocumentTypeId="{x:Null}" DisplayName="Data Extraction Scope" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="477.6,434.4" sap2010:WorkflowViewState.IdRef="DataExtractionScope_1" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UIbaa1fa0225764480ab7892a040b69f25&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;amet.invoices.ametInvoice&quot;:{&quot;FieldMappings&quot;:{&quot;amet.invoices.ametInvoice.InvoiceNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;amet.invoices.ametInvoice.InvoiceNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;amet.invoices.ametInvoice.InvoiceDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;amet.invoices.ametInvoice.InvoiceDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;amet.invoices.ametInvoice.CompanyName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;amet.invoices.ametInvoice.CompanyName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;amet.invoices.ametInvoice.TotalDue&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;amet.invoices.ametInvoice.TotalDue&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null},&quot;aenean.invoices.aeneanInvoice&quot;:{&quot;FieldMappings&quot;:{&quot;aenean.invoices.aeneanInvoice.InvoiceNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;aenean.invoices.aeneanInvoice.InvoiceNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;aenean.invoices.aeneanInvoice.InvoiceDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;aenean.invoices.aeneanInvoice.InvoiceDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;aenean.invoices.aeneanInvoice.CompanyName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;aenean.invoices.aeneanInvoice.CompanyName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;aenean.invoices.aeneanInvoice.TotalDue&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;aenean.invoices.aeneanInvoice.TotalDue&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UIbaa1fa0225764480ab7892a040b69f25&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UIbaa1fa0225764480ab7892a040b69f25&quot;:[]}}">
      <p7:DataExtractionScope.ClassificationResult>
        <InArgument x:TypeArguments="p5:ClassificationResult">
          <CSharpValue x:TypeArguments="p5:ClassificationResult" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">classificationResults[0]</CSharpValue>
        </InArgument>
      </p7:DataExtractionScope.ClassificationResult>
      <p7:DataExtractionScope.DocumentObjectModel>
        <InArgument x:TypeArguments="p2:Document">
          <CSharpValue x:TypeArguments="p2:Document" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">dom</CSharpValue>
        </InArgument>
      </p7:DataExtractionScope.DocumentObjectModel>
      <p7:DataExtractionScope.DocumentPath>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">in_docPath.FullName</CSharpValue>
        </InArgument>
      </p7:DataExtractionScope.DocumentPath>
      <p7:DataExtractionScope.DocumentText>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">docText</CSharpValue>
        </InArgument>
      </p7:DataExtractionScope.DocumentText>
      <p7:DataExtractionScope.ExtractionResult>
        <OutArgument x:TypeArguments="p5:ExtractionResult">
          <CSharpReference x:TypeArguments="p5:ExtractionResult" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">extractionResults</CSharpReference>
        </OutArgument>
      </p7:DataExtractionScope.ExtractionResult>
      <p7:DataExtractionScope.Extractors>
        <p7:RegexBasedExtractor DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="223.2,76" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_1" PersistenceId="UIbaa1fa0225764480ab7892a040b69f25" Timeout="2000" UseVisualAlignment="False">
          <p7:RegexBasedExtractor.Configuration>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">"[{\"DocumentTypeId\":\"amet.invoices.ametInvoice\",\"FieldConfiguration\":[{\"FieldId\":\"amet.invoices.ametInvoice.InvoiceNumber\",\"Expression\":\"invoice\\\\s+#\\\\s(\\\\d+?)\\\\s*date\",\"Options\":1,\"Model\":null},{\"FieldId\":\"amet.invoices.ametInvoice.InvoiceDate\",\"Expression\":\"date:\\\\s+(.+?)\\\\s+balance\",\"Options\":1,\"Model\":null},{\"FieldId\":\"amet.invoices.ametInvoice.CompanyName\",\"Expression\":\"(.+?)\\\\s*1938\\\\s+amet\",\"Options\":1,\"Model\":null},{\"FieldId\":\"amet.invoices.ametInvoice.TotalDue\",\"Expression\":\"balance\\\\s+due:\\\\s+(\\\\$.+?)\\\\s+quantity\",\"Options\":1,\"Model\":null}]},{\"DocumentTypeId\":\"aenean.invoices.aeneanInvoice\",\"FieldConfiguration\":[{\"FieldId\":\"aenean.invoices.aeneanInvoice.InvoiceNumber\",\"Expression\":\"invoice\\\\s+#(\\\\d+?)\\\\s+po\\\\s+\\\\d+\",\"Options\":1,\"Model\":null},{\"FieldId\":\"aenean.invoices.aeneanInvoice.InvoiceDate\",\"Expression\":\"invoice\\\\s+(.+?)\\\\s+invoice\",\"Options\":1,\"Model\":null},{\"FieldId\":\"aenean.invoices.aeneanInvoice.CompanyName\",\"Expression\":\"(.+?)\\\\s*3217\\\\s+nunc\",\"Options\":1,\"Model\":null},{\"FieldId\":\"aenean.invoices.aeneanInvoice.TotalDue\",\"Expression\":\"(\\\\d+\\\\.\\\\d+?)\\\\s+many\\\\s+thanks\\\\s+for\\\\s+your\\\\s+custom\",\"Options\":1,\"Model\":null}]}]"</CSharpValue>
            </InArgument>
          </p7:RegexBasedExtractor.Configuration>
          <p7:RegexBasedExtractor.DocumentBounds>
            <InArgument x:TypeArguments="p5:ResultsDocumentBounds">
              <DelegateArgumentValue x:TypeArguments="p5:ResultsDocumentBounds">
                <DelegateInArgument x:TypeArguments="p5:ResultsDocumentBounds" Name="DocumentBounds" />
              </DelegateArgumentValue>
            </InArgument>
          </p7:RegexBasedExtractor.DocumentBounds>
          <p7:RegexBasedExtractor.DocumentObjectModel>
            <InArgument x:TypeArguments="p2:Document">
              <DelegateArgumentValue x:TypeArguments="p2:Document">
                <DelegateInArgument x:TypeArguments="p2:Document" Name="DocumentObjectModel" />
              </DelegateArgumentValue>
            </InArgument>
          </p7:RegexBasedExtractor.DocumentObjectModel>
          <p7:RegexBasedExtractor.DocumentPath>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
              </DelegateArgumentValue>
            </InArgument>
          </p7:RegexBasedExtractor.DocumentPath>
          <p7:RegexBasedExtractor.DocumentText>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
              </DelegateArgumentValue>
            </InArgument>
          </p7:RegexBasedExtractor.DocumentText>
          <p7:RegexBasedExtractor.ExtractorDocumentType>
            <InArgument x:TypeArguments="p8:ExtractorDocumentType">
              <DelegateArgumentValue x:TypeArguments="p8:ExtractorDocumentType">
                <DelegateInArgument x:TypeArguments="p8:ExtractorDocumentType" Name="ExtractorDocumentType" />
              </DelegateArgumentValue>
            </InArgument>
          </p7:RegexBasedExtractor.ExtractorDocumentType>
          <p7:RegexBasedExtractor.ExtractorResult>
            <OutArgument x:TypeArguments="p8:ExtractorResult">
              <DelegateArgumentReference x:TypeArguments="p8:ExtractorResult">
                <DelegateOutArgument x:TypeArguments="p8:ExtractorResult" Name="ExtractorResult" />
              </DelegateArgumentReference>
            </OutArgument>
          </p7:RegexBasedExtractor.ExtractorResult>
          <p7:RegexBasedExtractor.PredictionId>
            <InArgument x:TypeArguments="x:String">
              <DelegateArgumentValue x:TypeArguments="x:String">
                <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
              </DelegateArgumentValue>
            </InArgument>
          </p7:RegexBasedExtractor.PredictionId>
        </p7:RegexBasedExtractor>
      </p7:DataExtractionScope.Extractors>
      <p7:DataExtractionScope.Taxonomy>
        <InArgument x:TypeArguments="p:DocumentTaxonomy">
          <CSharpValue x:TypeArguments="p:DocumentTaxonomy" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">in_taxonomy</CSharpValue>
        </InArgument>
      </p7:DataExtractionScope.Taxonomy>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </p7:DataExtractionScope>
    <p7:ExportExtractionResults DisplayName="Export Extraction Results" sap:VirtualizedContainerService.HintSize="477.6,208.8" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_1" IncludeConfidence="False" IncludeOCRConfidence="False">
      <p7:ExportExtractionResults.DataSet>
        <OutArgument x:TypeArguments="sd:DataSet">
          <CSharpReference x:TypeArguments="sd:DataSet" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">out_extractedData</CSharpReference>
        </OutArgument>
      </p7:ExportExtractionResults.DataSet>
      <p7:ExportExtractionResults.ExtractionResult>
        <InArgument x:TypeArguments="p5:ExtractionResult">
          <CSharpValue x:TypeArguments="p5:ExtractionResult" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">extractionResults</CSharpValue>
        </InArgument>
      </p7:ExportExtractionResults.ExtractionResult>
    </p7:ExportExtractionResults>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="477.6,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">"Document " + in_documentId + " processed successfully"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
  </Sequence>
</Activity>